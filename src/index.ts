import express, { Request, Response, Express } from "express";
import { ApolloServer } from "apollo-server-express";
import { readFileSync } from "fs";
import dotenv from "dotenv";
import { resolvers } from "./resolvers";

dotenv.config();

const PORT = process.env.PORT;

const startApolloServer = async (resolvers: any) => {
  // Getting autogenerated types
  const typeDefs = readFileSync(`${__dirname}/schema.graphql`, {
    encoding: "utf-8",
  });
  const server = new ApolloServer({ typeDefs, resolvers });
  const app: Express = express();
  await server.start();
  server.applyMiddleware({ app, path: "/graphql" });
  app.get("/", (_req: Request, res: Response) => {
    res.send("REST endpoint");
  });
  app.listen(PORT, () => {
    console.log(`Server is listening on port ${PORT}${server.graphqlPath}`);
  });
};

startApolloServer(resolvers);
